//= require jquery
//= require jquery_ujs
//= require_self
//= require_tree .

// Place your application-specific JavaScript functions and classes here
// This file is automatically included by javascript-include-tag :defaults
//
var nonsenseEngine = nonsenseEngine || {};

nonsenseEngine.inheritenceView = ( function() {

  var enable = function() {
    $('.poem').addClass('with-inheritence');

    $('#inheritence-enabler').addClass("disabled-link")
    $('#inheritence-enabler').bind('click', function(e) {
      e.preventDefault();
    });

    $('#inheritence-disabler').removeClass("disabled-link")
    $('#inheritence-disabler').bind('click', function(e) {
      e.preventDefault();
      disable();
    });
  };

  var disable = function() {
    $('.poem').removeClass('with-inheritence');

    $('#inheritence-disabler').addClass("disabled-link")
    $('#inheritence-disabler').bind('click', function(e) {
      e.preventDefault();
    });

    $('#inheritence-enabler').removeClass("disabled-link")
    $('#inheritence-enabler').bind('click', function(e) {
      e.preventDefault();
      enable();
    });
  }

  return {
    enable:  enable,
    disable: disable
  };
})();

nonsenseEngine.fullSize = ( function() {
  var $backdrop,
      $container,
      $close_btn,
      _setup,
      CLOSE_BTN_OFFSET = 18;

  var setup = function() {
    $container = $('<div/>');
    $container.prependTo(document.body);
    $container.addClass('full-sized-poem');

    $backdrop = $('<div/>');
    $backdrop.prependTo(document.body);
    $backdrop.addClass('backdrop');
    $backdrop.bind('click', close);
    $backdrop.css({opacity: 0.85});

    $close_btn = $('<img />');
    $close_btn.attr('src', '<%= asset_path 'close_button.png' %>')
    $close_btn.addClass('close-btn');
    $close_btn.prependTo(document.body);
    $close_btn.bind('click', close);

    $container.bind('mouseover', show_btn);
    $backdrop .bind('mouseover', hide_btn);

    _setup = true;
  };

  var open = function(e) {
    e.preventDefault();

    if(!_setup) { setup(); }

    $container.html( $(e.currentTarget).html() );

    var container_left = ($(window).width() - parseInt($container.css('width'))) / 2;
    $container.css('left', container_left);
    $close_btn.css('left', container_left +
      parseInt($container.css('width')) + CLOSE_BTN_OFFSET);
    $close_btn.css('top',
      parseInt($container.css('top')) - CLOSE_BTN_OFFSET);
    $container.slideDown();
    $backdrop.fadeIn();
  };

  var close = function (e) {
    e.preventDefault();

    $container.slideUp();
    $close_btn.fadeOut();
    $backdrop.fadeOut();
  };

  var show_btn = function(e) {
    $close_btn.show();
  }

  var hide_btn = function(e) {
    $close_btn.hide();
  }


  return {
    setup:        setup,
    open:         open,
    close:        close,
    show_btn:     show_btn,
    hide_btn:     hide_btn,
    container:    function() { return $container; },
    backdrop:     function() { return $backdrop; } ,
    close_btn:    function() { return $close_btn; }
  };
})();

// This function assumes the class 'voting-container'
nonsenseEngine.voting = (function() {
  var targetClass = 'voting-container',
      $voters;

  var enable = function() {
    $voters = $('.' + targetClass);
    $voters.bind('click', submit);
    $voters.children().bind('click', submit);
  };

  var findElem = function(e) {
    var $elem = $(e.target);
    while( !$elem.hasClass(targetClass) ) {
      $elem = $elem.parent();
    }
    console.log('elem.found: ' + targetClass);
    return $elem;
  }

  var submit = function(e) {
    findElem(e).find('form').submit();
  };

  return {
    enable: enable
  };
})();

nonsenseEngine.verticalCentering = (function() {
  var enableFor = function(sel) {
    var $elem = $(sel);

    var recalculate = function() {
      var top_pos = ($(window).height() - $elem.height() ) / 2 - 25;
      if(top_pos < 100) {
        top_pos = 100;
      }

      $elem.css({
        position: 'fixed',
        top: top_pos + 'px'
      });
    };

    recalculate();
    $(window).resize(recalculate);
  };

  return {
    enableFor: enableFor
  };
})();
